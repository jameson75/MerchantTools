@using CipherPark.TriggerOrange.Core;

@model CipherPark.TriggerOrange.Web.Models.SearchByKeywordsViewModel

@{
    ViewBag.Title = "Search Products By Keywords";
}

@section links
{

}

@section scripts
{
    @Scripts.Render("~/bundles/smarttable/js")
}
<!--<span>Site: </span>@Html.DropDownList("Sites", Model.Sites, new { @ng_model="query.site"})<br/>-->
<div style="padding-top:30px;padding-bottom:30px;">
    @Html.Partial("_PartialQuickGuide")
    <div>
        <table style="width:100%;">            
            <tr>
                <td style="padding-right:10px;width:1%">@Html.TextBox("Keywords", Model.Keywords, new { @class = "kwtext", @placeholder = "Enter keywords here", @ng_model = "query.keywords", @ng_enter = "onSearchClick()" })</td>
                <td align="left"><input class="catSearch" type="button" id="Search" ng-click="onSearchClick()" value="Search" /></td>
                <td >
                    <div style="float:right">
                        <span class="catDropdownLabel">Sort By:</span> 
                        @Html.Partial("_PartialSortByButton")
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>
@Html.Partial("_PartialProductTable")
@section ready{
    <script>
        angular.module('triggerOrangeApp', ['smart-table', 'orange', 'ngAnimate', 'ui.bootstrap'])
            .controller('triggerOrangeCtlr', function ($scope, $http) {
                $scope.query = {
                    site: null,
                    keywords: null
                };
                $scope.sortKey = "@SearchSortKey.WatchCount";
                $scope.isGuideCollapsed = true;
                $scope.isEmpty = false;
                $scope.isLoading = false;
                $scope.isInitializing = true;
                $scope.isRestoring = false;
                $scope.history = null;
                $scope.getProductsPipe = function (tableState) {
                    $scope.tableState = tableState;
                    if ($scope.isInitializing == true) {
                        if ($scope.isRestoring == true) {
                            $scope.query = $scope.history.query;
                            tableState.pagination.start = $scope.history.start;
                            $scope.isRestoring = false;
                        }
                        else {
                            $scope.query.site = "@Model.SelectedSite";
                            $scope.query.keywords = "@Model.Keywords";
                        }
                        $scope.isInitializing = false;
                    }
                    var postData = {
                        "pageSize": tableState.pagination.number,
                        "firstItemIndex": tableState.pagination.start,
                        "site": $scope.query.site,
                        "keywords": $scope.query.keywords,
                        "sortKey": $scope.sortKey
                    };
                    $scope.isLoading = true;
                    //$scope.isEmpty = true;
                    $http.post('@Url.Action("GetProductsByKeywords")', postData).success(function (result) {
                        tableState.pagination.numberOfPages = result.numberOfPages;
                        tableState.pagination.start = result.start;
                        tableState.pagination.totalItemCount = result.totalItemCount;
                        $scope.products = result.products;
                        $scope.isLoading = false;
                        $scope.isEmpty = result.products.length == 0;
                        ajaxHistory.Save({
                            query: $scope.query,
                            start: $scope.tableState.pagination.start
                        });
                    }).error(function (result) {
                        $scope.isLoading = false;
                        $scope.isEmpty = true;
                    });
                };
                $scope.onSearchClick = function () {
                    $scope.tableState.pagination.start = 0;
                    $scope.getProductsPipe($scope.tableState);
                };
                ajaxHistory.onRestore = function (history) {
                    $scope.history = history;
                    $scope.isRestoring = true;
                };
                ajaxHistory.Restore();
            });
    </script>
}

