@using CipherPark.TriggerOrange.Core;

@model CipherPark.TriggerOrange.Web.Models.SearchByCategoryViewModel

@{
    ViewBag.Title = "Search Products By Category";
}

@section links
{

}

@section scripts
{
    @Scripts.Render("~/bundles/smarttable/js")
}

<div  style="padding-top:30px;padding-bottom:30px;">
    @Html.Partial("_PartialQuickGuide")
    <!--<span>Site: </span>@Html.DropDownList("Sites", Model.Sites, new { @ng_model="selectedValues.site", @ng_change="onSiteChange(true)" })<br/>-->
    <table style="width:100%">
        <tr>
            <td class="catDropdownLabel">Category</td>
            <td class="catDropdownLabel">Subcategory</td>
            <td></td>
            <td style="float:right" class="catDropdownLabel">Sort By</td>
        </tr>
        <tr>
            <td style="padding-right:10px;"><select id="RootCategories" class="catDropDown" ng-options="cat.Value as cat.Name for cat in allRootCategories" ng-model="selectedValues.rootCategory" ng-change="onRootCategoryChange(true)"></select></td>
            <td style="padding-right:10px;"><select id="ChildCategories" class="catDropDown" ng-options="cat.Value as cat.Name for cat in allChildCategories" ng-model="selectedValues.childCategory"></select></td>
            <td><input class="catSearch" type="button" id="Search" ng-click="onSearchClick()" value="Search" /></td>
            <td><div style="float:right">@Html.Partial("_PartialSortByButton")</div></td>
        </tr>
    </table>
</div>

@Html.Partial("_PartialProductTable")
@section ready{
    <script>
        //Add a new method to arrays which 
        Array.prototype.find = function (predicate) {
            for (i = 0; i < this.length; i++)
                if (predicate(this[i]) == true)
                    return this[i];
            return null;
        };
    </script>
    <script>
        angular.module('triggerOrangeApp', ['smart-table', 'orange', 'ngAnimate', 'ui.bootstrap'])
           .controller('triggerOrangeCtlr', function ($scope, $http) {
               $scope.selectedValues = {
                   site: null,
                   rootCategory: null,
                   childCategory: null,
               };
               $scope.allRootCategories = null;
               $scope.allChildCategories = null;
               $scope.sortKey = "@SearchSortKey.WatchCount";
               $scope.isGuideCollapsed = true;
               $scope.isEmpty = null;
               $scope.isLoading = false;
               $scope.isInitializing = true;
               $scope.getProductsPipe = function (tableState) {
                   if ($scope.isInitializing == true) {
                       $scope.selectedValues.site = "@Model.SelectedSite";
                       $scope.onSiteChange(false);
                       $scope.selectedValues.rootCategory = "@Model.SelectedRootCategory";
                       $scope.onRootCategoryChange(false);
                       $scope.selectedValues.childCategory = "@Model.SelectedChildCategory";
                       $scope.isInitializing = false;
                   }
                   $scope.tableState = tableState;
                   var postData = {
                       "pageSize": tableState.pagination.number,
                       "firstItemIndex": tableState.pagination.start,
                       "site": $scope.selectedValues.site,
                       "root": $scope.selectedValues.rootCategory,
                       "child": $scope.selectedValues.childCategory,
                       "sortKey": $scope.sortKey
                   };
                   $scope.isLoading = true;
                   $scope.isEmpty = true;
                   $http.post('@Url.Action("GetProductsByCategory")', postData).success(function (result) {
                       tableState.pagination.numberOfPages = result.numberOfPages;
                       tableState.pagination.start = result.start;
                       tableState.pagination.totalItemCount = result.totalItemCount;
                       $scope.products = result.products;
                       $scope.isLoading = false;
                       $scope.isEmpty = result.products.length == 0;
                       ajaxHistory.Save({
                           query: $scope.query,
                           start: $scope.tableState.pagination.start
                       });
                   }).error(function (result) {
                       $scope.isLoading = false;
                       $scope.isEmpty = true;
                   });
               };
               $scope.onSearchClick = function () {
                   $scope.tableState.pagination.start = 0;
                   $scope.getProductsPipe($scope.tableState);
               };
               $scope.onSiteChange = function (bCascade) {
                   var postData = {
                       "site": $scope.selectedValues.site
                   };
                   $http.post('@Url.Action("GetRootCategories")', postData).success(function (result) {
                       $scope.allRootCategories = result.categories;
                       if (bCascade == true) {
                           $scope.selectedValues.rootCategory = $scope.allRootCategories[0].Value;
                           $scope.onRootCategoryChange(true);
                       }
                   });
               };
               $scope.onRootCategoryChange = function (bCascade) {
                   var postData = {                       
                       "rootCategoryId": $scope.selectedValues.rootCategory
                   };
                   $http.post('@Url.Action("GetChildCategories")', postData).success(function (result) {
                       $scope.allChildCategories = result.categories;
                       if (bCascade) {
                           $scope.selectedValues.childCategory = $scope.allChildCategories[0].Value;
                       }
                   });
               };
           });
    </script>
}

